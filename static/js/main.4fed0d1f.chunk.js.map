{"version":3,"sources":["Components/Counter/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","counter","setCounter","changeCounterHandler","value","className","onClick","type","onChange","e","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA6CeA,EA1CC,WACd,IAGA,EAA8BC,mBADT,GACrB,mBAAOC,EAAP,KAAgBC,EAAhB,KASMC,EAAuB,SAACC,GAC5B,GAAa,KAAVA,EACDA,EAZiB,OAaZ,GAAIA,EAfK,KAegBA,EAdhB,EAed,OAEFF,EAAWE,IAIb,OACE,qBAAKC,UAAU,qBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAYC,QAAS,kBAAMH,EAAqBF,EAAU,IAAzE,eACA,qBAAKI,UAAU,gBAAf,SACE,uBACEE,KAAK,SACLF,UAAU,gBACVG,SAAU,SAACC,GAzBO,IAACL,KAyBkBK,EAAEC,OAAON,OA9BtC,KAMQA,EALR,GAQhBF,EAAWE,IAsBHA,MAAOH,EACPU,UAAQ,MAGZ,qBAAKN,UAAU,YAAYC,QAAS,kBAAMH,EAAqBF,EAAU,IAAzE,qBC/BOW,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4fed0d1f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Counter.css';\n\nconst Counter = () => {\n  const MAX_VALUE = 1000;\n  const MIN_VALUE = 0;\n  const initialValue = 1;\n  const [counter, setCounter] = useState(initialValue);\n\n  const inputCounterHandler = (value) => {\n    if(value > MAX_VALUE || value < MIN_VALUE) {\n      return;\n    }\n    setCounter(value);\n  }\n\n  const changeCounterHandler = (value) => {\n    if(value === '') {\n      value = initialValue;\n    } else if (value > MAX_VALUE || value < MIN_VALUE) {\n      return;\n    }\n    setCounter(value);\n  }\n\n\n  return(\n    <div className=\"counter-background\">\n      <div className=\"counter\">\n        <div className=\"decrement\" onClick={() => changeCounterHandler(counter - 1, true )}>-</div>\n        <div className=\"counter-value\">\n          <input\n            type=\"number\"\n            className=\"counter-value\"\n            onChange={(e) => inputCounterHandler(e.target.value)}\n            value={counter}\n            required\n          />\n        </div>\n        <div className=\"increment\" onClick={() => changeCounterHandler(counter + 1)}>+</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Counter;","import Counter from './Components/Counter/Counter';\n\nfunction App() {\n  return (\n    <Counter />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}