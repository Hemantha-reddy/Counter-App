{"version":3,"sources":["Components/Counter/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","counter","setCounter","changeCounterHandler","value","className","onClick","type","onChange","e","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA6CeA,EA1CC,WACd,IAGA,EAA8BC,mBADT,GACrB,mBAAOC,EAAP,KAAgBC,EAAhB,KASMC,EAAuB,SAACC,GAC5B,GAAa,KAAVA,EACDA,EAZiB,OAaZ,GAAIA,EAfK,KAegBA,EAdhB,EAed,OAEFF,EAAWE,IAIb,OACE,qBAAKC,UAAU,qBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,YAAYC,QAAS,kBAAMH,EAAqBF,EAAU,IAAzE,eACA,qBAAKI,UAAU,gBAAf,SACE,uBACEE,KAAK,SACLF,UAAU,gBACVG,SAAU,SAACC,GAzBO,IAACL,KAyBkBK,EAAEC,OAAON,OA9BtC,KAMQA,EALR,GAQhBF,EAAWE,IAsBHA,MAAOH,EACPU,UAAQ,MAGZ,qBAAKN,UAAU,YAAYC,QAAS,kBAAMH,EAAqBF,EAAU,IAAzE,qBC/BOW,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6464bfdd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Counter.css';\r\n\r\nconst Counter = () => {\r\n  const MAX_VALUE = 1000;\r\n  const MIN_VALUE = 0;\r\n  const initialValue = 1;\r\n  const [counter, setCounter] = useState(initialValue);\r\n\r\n  const inputCounterHandler = (value) => {\r\n    if(value > MAX_VALUE || value < MIN_VALUE) {\r\n      return;\r\n    }\r\n    setCounter(value);\r\n  }\r\n\r\n  const changeCounterHandler = (value) => {\r\n    if(value === '') {\r\n      value = initialValue;\r\n    } else if (value > MAX_VALUE || value < MIN_VALUE) {\r\n      return;\r\n    }\r\n    setCounter(value);\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"counter-background\">\r\n      <div className=\"counter\">\r\n        <div className=\"decrement\" onClick={() => changeCounterHandler(counter - 1, true )}>-</div>\r\n        <div className=\"counter-value\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"counter-value\"\r\n            onChange={(e) => inputCounterHandler(e.target.value)}\r\n            value={counter}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"increment\" onClick={() => changeCounterHandler(counter + 1)}>+</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import Counter from './Components/Counter/Counter';\r\n\r\nfunction App() {\r\n  return (\r\n    <Counter />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}